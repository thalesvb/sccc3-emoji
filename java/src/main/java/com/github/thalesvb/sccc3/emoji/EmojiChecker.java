package com.github.thalesvb.sccc3.emoji;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.IntStream;

/**
 * A simple file-based checker using emoji-test.txt file
 * generated by Unicode consortium.
 */
public class EmojiChecker {
    private static final String DICTIONARY_FILE = "./resources/emoji-test.txt";
    private static EmojiChecker instance;
    private Set<String> dictionary;

    private EmojiChecker() throws FileNotFoundException {
        String line;
        String[] lineParts;
        String[] emojiHexes;
        dictionary = new HashSet<>();
        File file = new File(DICTIONARY_FILE);
        BufferedReader reader = new BufferedReader(new FileReader(file));
        try {
            while((line = reader.readLine()) != null) {
                if (line.startsWith("#") || line.length() == 0) {
                    continue;
                }
                lineParts = line.split(";");
                emojiHexes = lineParts[0].stripTrailing().split(" ");
                IntStream.Builder streamBuilder = IntStream.builder();
                for(String hexString : emojiHexes) {
                    streamBuilder.add(Integer.parseInt(hexString, 16));
                }
                dictionary.add(streamBuilder.build().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString());
            }
            reader.close();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public static EmojiChecker getInstance() {
        if (instance == null) {
            try {
                instance = new EmojiChecker();
            } catch (FileNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
        return instance;
    }

    public boolean emojiIsKnown(int codePoint) {
        return dictionary.contains(new StringBuilder().appendCodePoint(codePoint).toString());
    }
    public boolean emojiIsKnown(String emoji) {
        return dictionary.contains(emoji);
    }

}